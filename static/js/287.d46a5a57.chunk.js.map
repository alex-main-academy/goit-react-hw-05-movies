{"version":3,"file":"static/js/287.d46a5a57.chunk.js","mappings":"4NACA,GAAgB,gBAAkB,sCAAsC,iBAAmB,uCAAuC,eAAiB,qCAAqC,cAAgB,oCAAoC,cAAgB,oCAAoC,WAAa,kC,SCsB7S,GApBmBA,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,8V,SCmFhB,EA/EqB,WACnB,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAsBF,EAAAA,EAAAA,UAAS,CAAC,GAAhC,eAAOG,EAAP,KAAYC,EAAZ,KAIMC,GAAWC,EAAAA,EAAAA,MAmBjB,IAjBAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OAJU,+BAIV,kBACkBV,EAAQW,WAD1B,oBALS,mCAKT,oBAGFC,MAAK,SAAAC,GACJ,IAAKA,EAAQC,GACX,MAAM,IAAIC,MAAMF,EAAQG,QAG1B,OAAOH,EAAQI,MAChB,IACAL,KAAKR,GACLc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IAEZb,EAAOC,EACR,GAAE,CAACP,EAASO,KAERJ,EACH,OAAO,KAGT,IAAQmB,EAAyCnB,EAAzCmB,MAAOC,EAAkCpB,EAAlCoB,YAAaC,EAAqBrB,EAArBqB,SAAUC,EAAWtB,EAAXsB,OAEtC,OACE,gCACE,SAAC,KAAD,CACEC,GAAIrB,EAAIsB,MAAQtB,EAAIsB,MAAMC,KAAO,IACjCC,UAAWC,EAAAA,gBAFb,sBAMA,iBAAKD,UAAWC,EAAAA,iBAAhB,WACE,gBAAKD,UAAWC,EAAAA,eAAhB,UACE,gBACEC,IAAG,yCAAoCR,GACvCS,IAAI,kBAGR,iBAAKH,UAAWC,EAAAA,cAAhB,WACE,wBAAKR,KACL,cAAGO,UAAWC,EAAAA,cAAd,wBACA,uBAAIN,KACJ,cAAGK,UAAWC,EAAAA,cAAd,sBACA,wBACGL,EAAOQ,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OAAO,wBAAcA,GAALD,EACjB,aAIP,mDACA,gBAAIL,UAAWC,EAAAA,WAAf,WACE,yBACE,SAAC,EAAD,CAAYJ,GAAG,OAAOG,UAAWC,EAAAA,WAAjC,qBAIF,yBACE,SAAC,EAAD,CAAYJ,GAAG,UAAUG,UAAWC,EAAAA,WAApC,2BAKJ,SAAC,EAAAM,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://react-homework-template/./src/page/MovieDetails/MovieDetails.module.css?40f4","page/MovieDetails/MovieDetails.styled.js","page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"details__button\":\"MovieDetails_details__button__da+Ht\",\"details__wrapper\":\"MovieDetails_details__wrapper__Ivzr3\",\"details__image\":\"MovieDetails_details__image__gX2vt\",\"details__info\":\"MovieDetails_details__info__+B8ON\",\"details__name\":\"MovieDetails_details__name__aL4gU\",\"info__list\":\"MovieDetails_info__list__lbFXV\"};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  font-weight: bold;\n  padding: 7px 15px;\n  font-size: 15px;\n  color: black;\n  border-radius: 10px;\n  transition-duration: 300ms;\n\n  &.active {\n    background-color: rgb(28, 165, 190);\n    color: white;\n  }\n\n  :hover:not(.active) {\n    color: rgb(28, 165, 190);\n  }\n`;\n\nexport default StyledLink;\n","import { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport css from './MovieDetails.module.css';\nimport StyledLink from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n  const [url, setUrl] = useState({});\n\n  const API_KEY = '40e5fb6b16c3c0f0cef94ac33091be49';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const location = useLocation();\n\n  useEffect(() => {\n    fetch(\n      `${BASE_URL}/movie/${movieId.toString()}?api_key=${API_KEY}&language=en-US`\n    )\n      .then(respone => {\n        if (!respone.ok) {\n          throw new Error(respone.status);\n        }\n\n        return respone.json();\n      })\n      .then(setFilm)\n      .catch(err => console.log(err));\n\n    setUrl(location);\n  }, [movieId, location]);\n\n  if (!film) {\n    return null;\n  }\n\n  const { title, poster_path, overview, genres } = film;\n\n  return (\n    <section>\n      <Link\n        to={url.state ? url.state.from : '/'}\n        className={css.details__button}\n      >\n        Go back\n      </Link>\n      <div className={css.details__wrapper}>\n        <div className={css.details__image}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"film descr\"\n          />\n        </div>\n        <div className={css.details__info}>\n          <h2>{title}</h2>\n          <p className={css.details__name}>Overview:</p>\n          <p>{overview}</p>\n          <p className={css.details__name}>Genres:</p>\n          <ul>\n            {genres.map(({ id, name }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul className={css.info__list}>\n        <li>\n          <StyledLink to=\"cast\" className={css.info__link}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" className={css.info__link}>\n            Reviews\n          </StyledLink>\n        </li>\n      </ul>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["styled","NavLink","movieId","useParams","useState","film","setFilm","url","setUrl","location","useLocation","useEffect","fetch","toString","then","respone","ok","Error","status","json","catch","err","console","log","title","poster_path","overview","genres","to","state","from","className","css","src","alt","map","id","name","Suspense","fallback"],"sourceRoot":""}