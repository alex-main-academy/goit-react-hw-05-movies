{"version":3,"file":"static/js/341.c9bb2ec4.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,C,sDCdMS,EAAQ,eDgB4BC,EChB5B,GDgB4BA,EChB5B,UAAG,WAAMC,GAAN,yFACQC,MAAMD,GADd,cACTE,EADS,gBAEIA,EAASC,OAFb,cAETC,EAFS,yBAIRA,GAJQ,0CDiBR,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIZ,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGU,MAAMJ,EAAME,GAEzB,SAASnB,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOqB,GACd1B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASqB,EACnE,CAEAtB,OAAMuB,EACR,GACF,GCjCY,sDAOd,G,4HCNA,EAAgC,8BAAhC,EAA8E,8BAA9E,EAA0H,4BAA1H,EAAoK,4B,SCoEpK,EA9De,WACb,OAA0BC,EAAAA,EAAAA,MAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAyBjB,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAMQ,IAAI,SAAf,CAGA,IAEMC,EAAYT,EAAMQ,IAAI,UAE5BvB,EAAAA,EAAAA,GAAS,GAAD,OAHS,+BAGT,iCAJQ,mCAIR,iCAC8DwB,EAD9D,gCAENzB,MAAK,gBAAG0B,EAAH,EAAGA,QAAH,OAAiBN,GAAS,OAAIM,GAA9B,GAPN,CAQF,GAAE,CAACV,KAGF,gCACE,kBAAMW,SAzBc,SAAAC,GACtBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,OAAOC,SAASC,KAAKrC,MAEpB,KAAtBkC,EAAWI,QAGfjB,EAAS,CAAED,MAAOc,GACnB,EAiBG,WACE,kBACEK,KAAK,OACLC,YAAY,sBACZH,KAAK,OACLI,UAAWC,KAEb,mBAAQD,UAAWC,EAAnB,wBAEF,eAAID,UAAWC,EAAf,SACGnB,EAAMoB,OACLpB,EAAMqB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKF,GACPG,MAAO,CAAEC,KAAMxB,GACfgB,UAAWC,EAHb,SAKGI,KANID,EAUZ,KAED,4BAKT,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","getFilms/getFilms.js","webpack://react-homework-template/./src/page/Movies/Movies.module.css?e724","page/Movies/Movies.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const getFilms = async url => {\n  const response = await fetch(url);\n  const film = await response.json();\n\n  return film;\n};\n\nexport default getFilms;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie__search\":\"Movies_movie__search__s67M+\",\"movie__button\":\"Movies_movie__button__hFfmO\",\"movie__list\":\"Movies_movie__list__G6s0b\",\"movie__link\":\"Movies_movie__link__9pyMb\"};","import getFilms from 'getFilms/getFilms';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [query, setQuery] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n\n  const submitMovieName = event => {\n    event.preventDefault();\n    const searchName = event.target.elements.name.value;\n\n    if (searchName.trim() === '') {\n      return;\n    }\n    setQuery({ query: searchName });\n  };\n\n  useEffect(() => {\n    if (!query.get('query')) {\n      return;\n    }\n    const API_KEY = '40e5fb6b16c3c0f0cef94ac33091be49';\n    const BASE_URL = 'https://api.themoviedb.org/3';\n    const FILM_NAME = query.get('query');\n\n    getFilms(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${FILM_NAME}&page=1&include_adult=false`\n    ).then(({ results }) => setFilms([...results]));\n  }, [query]);\n\n  return (\n    <section>\n      <form onSubmit={submitMovieName}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n          name=\"name\"\n          className={css.movie__search}\n        />\n        <button className={css.movie__button}>Search</button>\n      </form>\n      <ul className={css.movie__list}>\n        {films.length ? (\n          films.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link\n                  to={`${id}`}\n                  state={{ from: location }}\n                  className={css.movie__link}\n                >\n                  {title}\n                </Link>\n              </li>\n            );\n          })\n        ) : (\n          <></>\n        )}\n      </ul>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","getFilms","fn","url","fetch","response","json","film","self","this","args","arguments","apply","err","undefined","useSearchParams","query","setQuery","useState","films","setFilms","location","useLocation","useEffect","get","FILM_NAME","results","onSubmit","event","preventDefault","searchName","target","elements","name","trim","type","placeholder","className","css","length","map","id","title","to","state","from"],"sourceRoot":""}