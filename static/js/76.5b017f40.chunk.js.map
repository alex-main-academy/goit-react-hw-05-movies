{"version":3,"file":"static/js/76.5b017f40.chunk.js","mappings":"yNACA,EAA6B,yBAA7B,EAAoE,0BAApE,EAA2G,yB,SC4C3G,EAtCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,GAAD,OAHO,+BAGP,kBACeN,EADf,4BAJM,mCAIN,oBAENO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASI,EAAvB,GACR,GAAE,CAACR,IAEoB,IAAjBG,EAAMM,QACX,eAAIC,UAAWC,EAAf,SACGR,EAAMS,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,aACtB,OACE,2BACE,gBAAKL,UAAWC,EAAhB,UACE,gBACEK,IACED,EAAY,yCAC0BA,GAClC,kHAENE,IAAI,aAGR,cAAGP,UAAWC,EAAd,SAA+BE,MAXxBC,EAcZ,OAGH,mEAEH,C,sBC3CD,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOpB,KAAKe,EAAOC,EAEvC,C,sDCdMjB,EAAQ,eDgB4ByB,EChB5B,GDgB4BA,EChB5B,UAAG,WAAMC,GAAN,yFACQC,MAAMD,GADd,cACTE,EADS,gBAEIA,EAASC,OAFb,cAETC,EAFS,yBAIRA,GAJQ,0CDiBR,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIV,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMY,EAAGU,MAAMJ,EAAME,GAEzB,SAASjB,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOmB,GACdxB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASmB,EACnE,CAEApB,OAAMqB,EACR,GACF,GCjCY,sDAOd,G","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","getFilms/getFilms.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast__list\":\"Cast_cast__list__yNezN\",\"cast__image\":\"Cast_cast__image__PlY6o\",\"cast__name\":\"Cast_cast__name__i+AX1\"};","import getFilms from 'getFilms/getFilms';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actor, setActor] = useState([]);\n\n  const API_KEY = '40e5fb6b16c3c0f0cef94ac33091be49';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n\n  useEffect(() => {\n    getFilms(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    ).then(({ cast }) => setActor(cast));\n  }, [movieId]);\n\n  return actor.length !== 0 ? (\n    <ul className={css.cast__list}>\n      {actor.map(({ name, id, profile_path }) => {\n        return (\n          <li key={id}>\n            <div className={css.cast__image}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                }\n                alt=\"actor\"\n              />\n            </div>\n            <p className={css.cast__name}>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>We don`t have any cast for this movie...</p>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const getFilms = async url => {\n  const response = await fetch(url);\n  const film = await response.json();\n\n  return film;\n};\n\nexport default getFilms;\n"],"names":["movieId","useParams","useState","actor","setActor","useEffect","getFilms","then","cast","length","className","css","map","name","id","profile_path","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","fn","url","fetch","response","json","film","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}